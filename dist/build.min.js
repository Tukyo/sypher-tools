const HelperModule={validateInput:function(e,t,r="validateInput"){if("object"!=typeof e)throw new TypeError(`${r}: "inputs" must be a valid object.`);if("object"!=typeof t)throw new TypeError(`${r}: "rules" must be a valid object.`);if("string"!=typeof r)throw new TypeError(`${r}: "context" must be a valid string.`);return Object.entries(t).forEach((([t,n])=>{const o=e[t];if(n.required&&null==o)throw new Error(`${r}: "${t}" is required.`);if(n.required||null!=o){if(n.type&&typeof o!==n.type)throw new TypeError(`${r}: Validation failed: "${t}" must be of type "${n.type}", but received type "${typeof o}".`);if("bool"===n.type&&"boolean"!=typeof o)throw new TypeError(`${r}: Validation failed: "${t}" must be of type "boolean", but received type "${typeof o}".`);if(n.regex&&!n.regex.test(o))throw new Error(`${r}: Validation failed: "${t}" must match the pattern "${n.regex}".`);if(n.values&&!n.values.includes(o))throw new Error(`${r}: Validation failed: "${t}" must be one of [${n.values}].`);if(n.enum&&!n.enum.includes(o))throw new Error(`${r}: Validation failed: "${t}" must be one of [${n.enum}].`);if(n.range&&(o<n.range.min||o>n.range.max))throw new RangeError(`${r}: Validation failed: "${t}" must be within the range [${n.range.min}, ${n.range.max}].`);if(n.length){const e=o.length;if("number"!=typeof e)throw new TypeError(`${r}: "${t}" must have a valid length property.`);if("number"==typeof n.length&&e!==n.length)throw new Error(`${r}: "${t}" must have a length of ${n.length}, but got ${e}.`);if("object"==typeof n.length){if(void 0!==n.length.min&&e<n.length.min)throw new Error(`${r}: "${t}" must have a minimum length of ${n.length.min}, but got ${e}.`);if(void 0!==n.length.max&&e>n.length.max)throw new Error(`${r}: "${t}" must have a maximum length of ${n.length.max}, but got ${e}.`)}}}})),!0},validateChain:function(e){try{sypher.validateInput({chain:e},{chain:{type:"string",required:!0}},"CryptoModule.validateChain")}catch(e){throw new Error(`CryptoModule.validateChain: ${e.message}`)}const t=CHAINS[e];if(!t)throw new Error(`CryptoModule.validateChain: Chain "${e}" is not supported.`);const r=t.params[0]?.chainId;if(!r)throw new Error(`CryptoModule.validateChain: Missing chainId for chain "${e}".`);return{chainData:t,chainId:r}}},TruncationModule={truncate:function(e,t=6,r=4){try{sypher.validateInput({string:e,startLength:t,endLength:r},{string:{type:"string",required:!0},startLength:{type:"number",required:!1},endLength:{type:"number",required:!1}},"TruncationModule.truncate")}catch(e){throw new Error(`TruncationModule.truncate: ${e.message}`)}return e.length<=t+r+3?e:`${e.slice(0,t)}...${e.slice(-r)}`},truncateBalance:function(e,t=2,r=8){try{sypher.validateInput({balance:e,decimals:t,maxLength:r},{balance:{type:"number",required:!0},decimals:{type:"number",required:!1},maxLength:{type:"number",required:!1}},"TruncationModule.truncateBalance")}catch(e){throw new Error(`TruncationModule.truncateBalance: ${e.message}`)}const n=parseFloat(e);if(n>=1e15)return`${(n/1e15).toFixed(t)}Q`;if(n>=1e12)return`${(n/1e12).toFixed(t)}T`;if(n>=1e9)return`${(n/1e9).toFixed(t)}B`;if(n>=1e6)return`${(n/1e6).toFixed(t)}M`;if(n>=1e3)return`${(n/1e3).toFixed(t)}K`;const[o,a=""]=n.toString().split(".");if(o.length>=r)return o;const i=r-o.length-1,s=a.slice(0,Math.max(i,0));return s?`${o}.${s}`:o}},WindowModule={pageFocus:function(){const e="visible"===document.visibilityState;return e?console.log("Page Focused..."):console.log("Page Unfocused..."),e}},InterfaceModule={toggleLoader:function(e,t=!0,r,n=""){try{sypher.validateInput({element:e,isEnabled:t,loaderHTML:r,newText:n},{element:{type:"object",required:!0},isEnabled:{type:"bool",required:!1},loaderHTML:{type:"string",required:!0},newText:{type:"string",required:!1}},"InterfaceModule.toggleLoader")}catch(e){throw new Error(`InterfaceModule.toggleLoader: ${e.message}`)}e.innerHTML=t?r:n},parallax:function(){const e=document.querySelectorAll("[data-speed]");function t(){e.forEach((e=>{const t=parseFloat(e.dataset.speed)||.5,r=window.scrollY*t;e.style.transform=`translateY(${-r}px)`}))}0!==e.length?(window.addEventListener("scroll",(function(){requestAnimationFrame(t)})),t()):console.warn("InterfaceModule.parallax: Parallax enabled, but no elements found with the [data-speed] attribute.")},fade:function(e="20px",t="0.5s"){try{sypher.validateInput({distance:e,length:t},{distance:{type:"string",required:!1},length:{type:"string",required:!1}},"InterfaceModule.fade")}catch(e){throw new Error(`InterfaceModule.fade: ${e.message}`)}const r=document.querySelectorAll("[data-fade]");if(0===r.length)return void console.warn("InterfaceModule.fade: Fade enabled, but no elements found with the [data-fade] attribute.");r.forEach((r=>{r.style.opacity=0,r.style.transform=`translateY(${e})`,r.style.transition=`opacity ${t} ease-out, transform ${t} ease-out`}));const n=new IntersectionObserver((t=>{t.forEach((t=>{const r=t.target;t.isIntersecting&&t.intersectionRatio>.1?(r.style.opacity=1,r.style.transform="translateY(0)"):(r.style.opacity=0,r.style.transform=`translateY(${e})`)}))}),{threshold:.1});r.forEach((e=>n.observe(e)))}},CryptoInterfaceModule={createButton:function(e=document.body,t=()=>sypher.connect("ethereum"),r={text:"Connect Wallet",className:"connect-button",modal:!1}){try{sypher.validateInput({element:e,onClick:t,params:r},{element:{type:"object",required:!1},onClick:{type:"function",required:!1},params:{type:"object",required:!1}},"CryptoInterfaceModule.createButton")}catch(e){throw new Error(`CryptoInterfaceModule.createButton: ${e.message}`)}const{text:n="Connect Wallet",className:o="connect-button",modal:a=!1}=r;if("string"!=typeof n)throw new TypeError('CryptoInterfaceModule.createButton: "params.text" must be a valid string.');if("string"!=typeof o)throw new TypeError('CryptoInterfaceModule.createButton: "params.className" must be a valid string.');const i=document.createElement("button");return i.classList.add(o),i.textContent=n,i.onclick=t,a&&console.log("Modal Enabled..."),e.appendChild(i),i}},CHAINLINK_ABI=["function latestRoundData() view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)"],ERC20_ABI=["function allowance(address owner, address spender) view returns (uint256)","function approve(address spender, uint256 amount) returns (bool)","function balanceOf(address account) view returns (uint256)","function decimals() view returns (uint8)","function name() view returns (string)","function symbol() view returns (string)","function totalSupply() view returns (uint256)","function transfer(address to, uint256 amount) returns (bool)"],UNISWAP_V2_POOL_ABI=["function getReserves() view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast)","function token0() view returns (address)","function token1() view returns (address)","function totalSupply() view returns (uint256)","function balanceOf(address owner) view returns (uint256)","function allowance(address owner, address spender) view returns (uint256)","function approve(address spender, uint256 value) returns (bool)","function transfer(address to, uint256 value) returns (bool)","function transferFrom(address from, address to, uint256 value) returns (bool)"],UNISWAP_V3_POOL_ABI=["function slot0() view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)","function token0() view returns (address)","function token1() view returns (address)","function fee() view returns (uint24)","function decimals() view returns (uint8)","function liquidity() view returns (uint128)"],CHAINS={ethereum:{params:[{chainId:"0x1",chainName:"Ethereum",nativeCurrency:{name:"Ethereum",symbol:"ETH",decimals:18},rpcUrls:["https://eth.llamarpc.com"],blockExplorerUrls:["https://etherscan.io"]}],priceFeeds:{eth:"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"},pairAddresses:{eth:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"}},arbitrum:{params:[{chainId:"0xa4b1",chainName:"Arbitrum",nativeCurrency:{name:"Arbitrum",symbol:"ETH",decimals:18},rpcUrls:["https://arbitrum.llamarpc.com"],blockExplorerUrls:["https://arbiscan.io"]}],priceFeeds:{eth:"0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612",arb:"0xb2A824043730FE05F3DA2efaFa1CBbe83fa548D6"},pairAddresses:{eth:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",arb:"0xB50721BCf8d664c30412Cfbc6cf7a15145234ad1"}},optimism:{params:[{chainId:"0xa",chainName:"Optimism",nativeCurrency:{name:"Optimism",symbol:"ETH",decimals:18},rpcUrls:["https://optimism.llamarpc.com"],blockExplorerUrls:["https://optimistic.etherscan.io"]}],priceFeeds:{eth:"0xb7B9A39CC63f856b90B364911CC324dC46aC1770",op:"0x0D276FC14719f9292D5C1eA2198673d1f4269246"},pairAddresses:{eth:"0x4200000000000000000000000000000000000006",op:"0x4200000000000000000000000000000000000042"}},base:{params:[{chainId:"0x2105",chainName:"Base",nativeCurrency:{name:"Base",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.base.org"],blockExplorerUrls:["https://basescan.org"]}],priceFeeds:{eth:"0x71041dddad3595F9CEd3DcCFBe3D1F4b0a16Bb70"},pairAddresses:{eth:"0x4200000000000000000000000000000000000006"}},polygon:{params:[{chainId:"0x89",chainName:"Polygon",nativeCurrency:{name:"Polygon",symbol:"POL",decimals:18},rpcUrls:["https://polygon.llamarpc.com"],blockExplorerUrls:["https://polygonscan.com"]}],priceFeeds:{eth:"0xF9680D99D6C9589e2a93a78A04A279e509205945",matic:"0xAB594600376Ec9fD91F8e885dADF0CE036862dE0"},pairAddresses:{eth:"0x11CD37bb86F65419713f30673A480EA33c826872",matic:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"}},avalanche:{params:[{chainId:"0xa86a",chainName:"Avalanche",nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},rpcUrls:["https://avalanche.drpc.org"],blockExplorerUrls:["https://snowtrace.io"]}],priceFeeds:{eth:"0x976B3D034E162d8bD72D6b9C989d545b839003b0",avax:"0x0A77230d17318075983913bC2145DB16C7366156"},pairAddresses:{eth:"",avax:""}},fantom:{params:[{chainId:"0xfa",chainName:"Fantom",nativeCurrency:{name:"Fantom",symbol:"FTM",decimals:18},rpcUrls:["https://rpc.ftm.tools"],blockExplorerUrls:["https://ftmscan.com"]}],priceFeeds:{eth:"0x11DdD3d147E5b83D01cee7070027092397d63658",ftm:"0xf4766552D15AE4d256Ad41B6cf2933482B0680dc"},pairAddresses:{eth:"",ftm:""}}},addressRegex=/^0x[a-fA-F0-9]{40}$/,lpVersions=["V2","V3"],CryptoModule={initCrypto:async function(e,t,r,n,o="eth"){try{sypher.validateInput({chain:e,contractAddress:t,poolAddress:r,version:n,pair:o},{chain:{type:"string",required:!0},contractAddress:{type:"string",required:!0,regex:addressRegex},poolAddress:{type:"string",required:!0,regex:addressRegex},version:{type:"string",required:!0,enum:lpVersions},pair:{type:"string",required:!1}},"CryptoModule.initCrypto")}catch(e){throw new Error(`CryptoModule.initCrypto: Invalid input: ${e.message}`)}const{chainData:a,chainId:i}=this.validateChain(e);if(!a||!i)return null;try{if(!await this.connect(e))return null;console.log("Getting details for:",{chain:e,contractAddress:t,poolAddress:r,version:n,pair:o});const{balance:a,decimals:i,name:s,symbol:c,totalSupply:l}=await this.getTokenDetails(e,t);let d=null;"V2"===n&&(d=await this.getPriceV2(e,r,o)),"V3"===n&&(d=await this.getPriceV3(e,t,r,o));const u=this.getUserValue(a,d);return this.clean({contractAddress:t,poolAddress:r,balance:a,decimals:i,name:s,symbol:c,totalSupply:l,tokenPrice:d,userValue:u})}catch(e){return console.error(`CryptoModule.initCrypto: An error occurred during initialization: ${e.message}`),null}},connect:async function(e){try{sypher.validateInput({chain:e},{chain:{type:"string",required:!0}},"CryptoModule.connect")}catch(e){throw new Error(`CryptoModule.connect: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.connect: No Ethereum provider found....");if(this.connected)return this.connected;try{const t=await window.ethereum.request({method:"eth_requestAccounts"});if(!Array.isArray(t)||0===t.length)throw new Error("CryptoModule.connect: No accounts returned by the Ethereum provider.");const r=t[0];return r?(await this.switchChain(e),this.connected=r,console.log("Connected account:",r),r):(console.warn("CryptoModule.connect: Wallet not connected."),null)}catch(e){throw console.error(`CryptoModule.connect: Connection error occurred: ${e.message}`),new Error(`CryptoModule.connect: Failed to connect to the Ethereum provider. Details: ${e.message}`)}},switchChain:async function(e){try{sypher.validateInput({chain:e},{chain:{type:"string",required:!0}},"CryptoModule.switchChain")}catch(e){throw new Error(`CryptoModule.switchChain: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.switchChain: No Ethereum provider found....");const t=CHAINS[e];if(!t||!t.params)throw new Error(`CryptoModule.switchChain: Chain "${e}" is not supported.`);const r=t.params[0].chainId;if(this.currentChain!==r)try{if(await window.ethereum.request({method:"eth_chainId"})===r)return void(this.currentChain=r);console.log(`Switching to ${e} chain...`),await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:r}]}),this.currentChain=r}catch(n){if(console.warn(`CryptoModule.switchChain: Attempting to add chain: ${e}`),4902!==n.code)throw new Error(`CryptoModule.switchChain: Failed to switch to chain "${e}". Details: ${n.message}`);try{await window.ethereum.request({method:"wallet_addEthereumChain",params:t.params}),this.currentChain=r}catch(t){throw new Error(`CryptoModule.switchChain: Unable to switch or add chain "${e}". Details: ${t.message}`)}}},getPriceFeed:async function(e,t="eth"){try{sypher.validateInput({chain:e,pair:t},{chain:{type:"string",required:!0},pair:{type:"string",required:!1}},"CryptoModule.getPriceFeed")}catch(e){throw new Error(`CryptoModule.getPriceFeed: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.getPriceFeed: No Ethereum provider found....");const{chainData:r,chainId:n}=this.validateChain(e);if(!r||!n)return null;try{if(!await this.connect(e))return null;const r=CHAINS[e].priceFeeds[t];if(!r)throw new Error(`Chain ${e} is not supported`);const n=new ethers.providers.Web3Provider(window.ethereum).getSigner(),o=new ethers.Contract(r,CHAINLINK_ABI,n),a=await o.latestRoundData(),i=ethers.utils.formatUnits(a.answer,8);return console.log(`ETH Price on ${e}: $${i}`),i}catch(e){throw new Error(`CryptoModule.getPriceFeed: Error fetching price feed: ${e.message}`)}},getTokenDetails:async function(e,t){try{sypher.validateInput({chain:e,contractAddress:t},{chain:{type:"string",required:!0},contractAddress:{type:"string",required:!0,regex:addressRegex}},"CryptoModule.getTokenDetails")}catch(e){throw new Error(`CryptoModule.getTokenDetails: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.getTokenDetails: No Ethereum provider found....");try{if(!await this.connect(e))return null;const r=new ethers.providers.Web3Provider(window.ethereum).getSigner(),n=await r.getAddress(),o=new ethers.Contract(t,ERC20_ABI,r),a=await o.balanceOf(n),i=await o.decimals(),s=await o.name(),c=await o.symbol(),l=await o.totalSupply();return console.log("Token Details:",{balance:a,decimals:i,name:s,symbol:c,totalSupply:l}),{balance:a,decimals:i,name:s,symbol:c,totalSupply:l}}catch(e){throw new Error(`CryptoModule.getTokenDetails: Error fetching token details: ${e.message}`)}},getPriceV2:async function(e,t,r){try{sypher.validateInput({chain:e,poolAddress:t,pair:r},{chain:{type:"string",required:!0},poolAddress:{type:"string",required:!0,regex:addressRegex},pair:{type:"string",required:!0}},"CryptoModule.getPriceV2")}catch(e){throw new Error(`CryptoModule.getPriceV2: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.getPriceV2: No Ethereum provider found....");const{chainData:n,chainId:o}=this.validateChain(e);if(!n||!o)return null;try{if(!await this.connect(e))return null;const n=await this.getPriceFeed(e,r);if(!n)return null;const o=new ethers.providers.Web3Provider(window.ethereum).getSigner(),a=new ethers.Contract(t,UNISWAP_V2_POOL_ABI,o),i=await a.token0(),s=await a.token1(),c=await a.getReserves(),l=c._reserve0,d=c._reserve1,u=new ethers.Contract(i,ERC20_ABI,o),h=new ethers.Contract(s,ERC20_ABI,o),p=await u.decimals(),m=await h.decimals();console.log("Reserve 0:",l),console.log("Reserve 1:",d),console.log("Token 0:",i),console.log("Token 1:",s),console.log("Decimals 0:",p),console.log("Decimals 1:",m);const w=ethers.BigNumber.from(l),g=ethers.BigNumber.from(d),y=parseFloat(ethers.utils.formatUnits(w,p)),f=parseFloat(ethers.utils.formatUnits(g,m)),C=CHAINS[e].pairAddresses[r];console.log("Pair Address:",C);let b=null;if(s.toLowerCase()===C.toLowerCase())b=f/y;else{if(i.toLowerCase()!==C.toLowerCase())throw new Error(`CryptoModule.getPriceV2: Neither token is ${r}`);b=y/f}const v=b*n;return console.log(`V2 Price for token in pool ${t}: $${v}`),v}catch(e){throw new Error(`CryptoModule.getPriceV2: Error calculating V2 token price: ${e.message}`)}},getPriceV3:async function(e,t,r,n){try{sypher.validateInput({chain:e,contractAddress:t,poolAddress:r,pair:n},{chain:{type:"string",required:!0},contractAddress:{type:"string",required:!0,regex:addressRegex},poolAddress:{type:"string",required:!0,regex:addressRegex},pair:{type:"string",required:!0}},"CryptoModule.getPriceV3")}catch(e){throw new Error(`CryptoModule.getPriceV3: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.getPriceV3: No Ethereum provider found....");const{chainData:o,chainId:a}=this.validateChain(e);if(!o||!a)return null;try{if(!await this.connect(e))return null;const{sqrtPriceX96:o,token0:a,token1:i,decimals0:s,decimals1:c}=await this.getPoolV3(e,t,r),l=CHAINS[e].pairAddresses[n];console.log("Pair Address:",l);const d=ethers.BigNumber.from(o),u=ethers.BigNumber.from("79228162514264337593543950336"),h=d.mul(d).mul(ethers.BigNumber.from(10).pow(s)),p=u.mul(u).mul(ethers.BigNumber.from(10).pow(c)),m=h.div(p),w=h.mod(p),g=8,y=ethers.BigNumber.from(10).pow(g),f=w.mul(y).div(p),C=parseFloat(m.toString())+parseFloat(f.toString())/Math.pow(10,g);let b;if(i.toLowerCase()===l.toLowerCase())b=C;else{if(a.toLowerCase()!==l.toLowerCase())throw new Error(`CryptoModule.getPriceV3: Neither token is ${n}`);b=1/C}const v=await this.getPriceFeed(e,n);if(!v)return null;const E=b*parseFloat(v);return console.log(`V3 Price for token in pool ${r}: $${E}`),E}catch(e){throw new Error(`CryptoModule.getPriceV3: Error calculating V3 token price: ${e.message}`)}},getPoolV3:async function(e,t,r){try{sypher.validateInput({chain:e,contractAddress:t,poolAddress:r},{chain:{type:"string",required:!0},contractAddress:{type:"string",required:!0,regex:addressRegex},poolAddress:{type:"string",required:!0,regex:addressRegex}},"CryptoModule.getPoolV3")}catch(e){throw new Error(`CryptoModule.getPoolV3: Invalid input: ${e.message}`)}if(!window.ethereum)throw new Error("CryptoModule.getPoolV3: No Ethereum provider found....");const{chainData:n,chainId:o}=this.validateChain(e);if(!n||!o)return null;try{if(!await this.connect(e))return null;const t=new ethers.providers.Web3Provider(window.ethereum).getSigner(),n=new ethers.Contract(r,UNISWAP_V3_POOL_ABI,t),o=(await n.slot0()).sqrtPriceX96;console.log("Sqrt Price X96:",o);const a=await n.token0(),i=await n.token1();console.log("Token 0:",a),console.log("Token 1:",i);const s=new ethers.Contract(a,ERC20_ABI,t),c=new ethers.Contract(i,ERC20_ABI,t),l=await s.decimals(),d=await c.decimals();console.log("Decimals 0:",l),console.log("Decimals 1:",d);const u=await n.liquidity();return console.log("Liquidity:",u),{sqrtPriceX96:o,token0:a,token1:i,decimals0:l,decimals1:d,liquidity:u}}catch(e){throw new Error(`CryptoModule.getPoolV3: Error fetching V3 pool details: ${e.message}`)}},getUserValue:function(e,t){try{sypher.validateInput({balance:e,price:t},{balance:{type:"object",required:!0},price:{type:"string",required:!0}},"CryptoModule.getUserValue")}catch(e){return console.error(`CryptoModule.getUserValue: Invalid input: ${e.message}`),null}try{const r=parseFloat(e)*parseFloat(t);return console.log(`User Value: ${r}`),r}catch(e){return console.error("Error calculating user value:",e),null}},clean:function(e){try{sypher.validateInput({tokenDetails:e},{tokenDetails:{type:"object",required:!0}},"CryptoModule.clean")}catch(e){throw new Error(`CryptoModule.clean: Invalid input: ${e.message}`)}const{contractAddress:t,poolAddress:r,balance:n,decimals:o,name:a,symbol:i,totalSupply:s,tokenPrice:c,userValue:l}=e,d={contractAddress:t,poolAddress:r,balance:parseFloat(ethers.utils.formatUnits(n,o)),decimals:o,name:a,symbol:i,totalSupply:parseFloat(ethers.utils.formatUnits(s,o)),tokenPrice:parseFloat(c),userValue:(parseFloat(l)/Math.pow(10,o)).toFixed(o)};return console.log("Token Details:",d),d}};!function(e){const t={};Object.assign(t,HelperModule),Object.assign(t,WindowModule),Object.assign(t,TruncationModule),Object.assign(t,InterfaceModule),Object.assign(t,CryptoModule),Object.assign(t,CryptoInterfaceModule),e.sypher=t,console.log("Sypher Modules Initialized!")}(window);